name: CI
on:
  workflow_dispatch:
  push:

jobs:
  docker_build_and_push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      # Checkout
      # Note: the following folder layout matters:
      # parent_dir:
      #   - hydra
      #   - citus
      #   - spilo
      - name: Checkout hydra
        uses: actions/checkout@v2
        with:
          path: hydra
      - name: Checkout columnar
        uses: actions/checkout@v2
        with:
          repository: HydrasDB/citus
          token: ${{ secrets.GH_TOKEN }}
          path: citus
          # TODO: change back to master after merged
          ref: owenthereal/columnar_prefix_functions
      - name: Checkout spilo
        uses: actions/checkout@v2
        with:
          repository: zalando/spilo
          token: ${{ secrets.GH_TOKEN }}
          ref: 2.1-p7
          path: spilo

      # Set versions
      - name: Set versions
        run: |
          cd ./citus && COLUMNAR_EXT_SHA=$(git rev-parse --short HEAD) && echo "COLUMNAR_EXT_SHA=${COLUMNAR_EXT_SHA}" >> $GITHUB_ENV && cd ../
          cd ./spilo && SPILO_SHA=$(git rev-parse --short HEAD) && echo "SPILO_SHA=${SPILO_SHA}" >> $GITHUB_ENV && cd ../
          echo "TAG=${SPILO_SHA}_${COLUMNAR_EXT_SHA}" >> $GITHUB_ENV

      # Docker build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Docker build
        uses: docker/bake-action@master
        with:
          workdir: ./hydra
          push: true
          pull: true
          no-cache: true
          set: |
            hydra.tags=localhost:5000/hydra/hydra:${{ env.TAG }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      # Acceptance tests
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: Run Acceptance Tests
        run: |
          cd ./hydra
          HYDRA_IMAGE=localhost:5000/hydra/hydra:${TAG} \
            HYDRA_PROD_IMAGE=ghcr.io/hydrasdb/hydra:$(cat HYDRA_PROD_VER) \
            make acceptance_test

      # Docker push to ghcr.io
      - name: Login to ghcr.io
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker push hydra to ghcr.io
        if: github.ref == 'refs/heads/main'
        uses: docker/bake-action@master
        with:
          workdir: ./hydra
          targets: hydra
          push: true
          set: |
            hydra.tags=ghcr.io/hydrasdb/hydra:latest
            hydra.tags=ghcr.io/hydrasdb/hydra:${{ env.TAG }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      # Docker push to ecr
      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: no

      - name: Login to Amazon ECR
        if: github.ref == 'refs/heads/main'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: "011789831835"

      - name: Docker push hydra to ECR
        if: github.ref == 'refs/heads/main'
        uses: docker/bake-action@master
        with:
          workdir: ./hydra
          targets: hydra
          push: true
          # TODO: create ECR repo to HOST/hydra and change the refs here
          set: |
            hydra.tags=${{ steps.login-ecr.outputs.registry }}/spilo:latest
            hydra.tags=${{ steps.login-ecr.outputs.registry }}/spilo:${{ env.TAG }}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
